{"version":3,"sources":["helpers/format-date.js","helpers/format-type.js","components/pokemon-card.js","models/mock-pokemon.ts","services/pokemon-service.js","components/pokemon-search.js","pages/pokemon-list.js","components/loader.js","pages/pokemon-detail.js","pages/page-not-found.js","components/pokemon-form.js","pages/pokemon-edit.js","models/pokemon.ts","pages/pokemon-add.js","services/authentication-service.js","pages/login.js","PrivateRoute.js","App.js","index.js"],"names":["formatDate","date","Date","getDate","getMonth","getFullYear","formatType","type","color","PokemonCard","pokemon","borderColor","useState","setColor","history","useHistory","className","onClick","id","push","onMouseEnter","onMouseLeave","style","src","picture","alt","name","created","types","map","POKEMONS","hp","cp","PokemonService","this","isDev","fetch","then","response","json","catch","error","handleError","Promise","resolve","pokemons","data","isEmpty","find","method","body","JSON","stringify","headers","index","findIndex","filter","term","includes","Object","keys","length","console","process","PokemonSearch","setTerm","setPokemons","placeholder","value","onChange","e","target","searchPokemon","handleInputChange","to","PokemonList","useEffect","getPokemons","position","bottom","right","Loader","Pokemondetail","match","setPokemon","getPokemon","params","width","margin","PageNotFound","PokemonForm","isEditForm","isValid","form","setForm","mystyle","left","opacity","hasType","fieldName","fieldValue","newFields","log","isAddForm","isTypesValid","handleSubmit","preventDefault","newForm","startsWith","endsWith","newField","test","validateForm","updatePokemon","addPokemon","onSubmit","deletePokemon","htmlFor","marginBottom","disabled","checked","concat","currentType","selectType","PokemonEdit","Pokemon","PokemonAdd","getTime","AuthentificationService","username","password","isAuthenticated","setTimeout","Login","message","setMessage","AuthenticationService","login","PrivateRoute","Component","component","rest","render","props","pathname","App","exact","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e794357a.chunk.js","sourcesContent":["const formatDate = (date) => {\r\n  date = new Date();\r\n  return `${date.getDate()}/${date.getMonth()+1}/${date.getFullYear()}`;\r\n  // return date.getDate()  + \"-\" + (date.getMonth()+1) + \"-\" + date.getFullYear() ;\r\n}\r\n\r\nexport default formatDate;","const formatType = (type: string): string => {\r\n  let color: string;\r\n\r\n  switch (type) {\r\n    case 'Feu':\r\n      color = 'red lighten-1';\r\n      break;\r\n    case 'Eau':\r\n      color = 'blue lighten-1';\r\n      break;\r\n    case 'Plante':\r\n      color = 'green lighten-1';\r\n      break;\r\n    case 'Insecte':\r\n      color = 'brown lighten-1';\r\n      break;\r\n    case 'Normal':\r\n      color = 'grey lighten-3';\r\n      break;\r\n    case 'Vol':\r\n      color = 'blue lighten-3';\r\n      break;\r\n    case 'Poison':\r\n      color = 'deep-purple accent-1';\r\n      break;\r\n    case 'Fée':\r\n      color = 'pink lighten-4';\r\n      break;\r\n    case 'Psy':\r\n      color = 'deep-purple darken-2';\r\n      break;\r\n    case 'Electrik':\r\n      color = 'lime accent-1';\r\n      break;\r\n    case 'Combat':\r\n      color = 'deep-orange';\r\n      break;\r\n    default:\r\n      color = 'grey';\r\n      break;\r\n  }\r\n\r\n  return `chip ${color}`;\r\n}\r\n\r\nexport default formatType;","import React, { useState } from 'react';\r\nimport './pokemon-card.css';\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst PokemonCard = ({pokemon, borderColor = '#009688'}) => {\r\n\r\n  const [color, setColor] = useState();\r\n  const history = useHistory();\r\n\r\n  const showBorder = () => {\r\n    setColor(borderColor);\r\n  }\r\n\r\n  const hideBorder = () => {\r\n    setColor('#f5f5f5'); //On remet la bordure en gris\r\n  }\r\n\r\n  const goToPokemon = (id) => {\r\n    history.push(`pokemons/${id}`);\r\n  }\r\n\r\n  return (\r\n    <div className=\"col s6 m4\" onClick={() => goToPokemon(pokemon.id)} onMouseEnter={showBorder} onMouseLeave={hideBorder}>\r\n      <div className=\"card horizontal\" style={{ borderColor: color}}>\r\n        <div className=\"card-image\">\r\n          <img src={pokemon.picture} alt={pokemon.name}/>\r\n        </div>\r\n        <div className=\"card-stacked\">\r\n          <div className=\"card-content\">\r\n            <p>{pokemon.name}</p>\r\n            <p><small>{formatDate(pokemon.created)}</small></p>\r\n            {pokemon.types.map(type => (\r\n              <span key={type} className={formatType(type)}>{type}</span>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonCard;","import Pokemon from './pokemon';\r\n\r\nexport const POKEMONS: Pokemon[] = [\r\n {\r\n  id: 1,\r\n  name: \"Bulbizarre\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/001.png\",\r\n  types: [\"Plante\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 2,\r\n  name: \"Salamèche\",\r\n  hp: 28,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/004.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 3,\r\n  name: \"Carapuce\",\r\n  hp: 21,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/007.png\",\r\n  types: [\"Eau\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 4,\r\n  name: \"Aspicot\",\r\n  hp: 16,\r\n  cp: 2,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/013.png\",\r\n  types: [\"Insecte\", \"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 5,\r\n  name: \"Roucool\",\r\n  hp: 30,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/016.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 6,\r\n  name: \"Rattata\",\r\n  hp: 18,\r\n  cp: 6,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/019.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 7,\r\n  name: \"Piafabec\",\r\n  hp: 14,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/021.png\",\r\n  types: [\"Normal\", \"Vol\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 8,\r\n  name: \"Abo\",\r\n  hp: 16,\r\n  cp: 4,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/023.png\",\r\n  types: [\"Poison\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 9,\r\n  name: \"Pikachu\",\r\n  hp: 21,\r\n  cp: 7,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/025.png\",\r\n  types: [\"Electrik\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 10,\r\n  name: \"Sabelette\",\r\n  hp: 19,\r\n  cp: 3,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/027.png\",\r\n  types: [\"Normal\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 11,\r\n  name: \"Mélofée\",\r\n  hp: 25,\r\n  cp: 5,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/035.png\",\r\n  types: [\"Fée\"],\r\n  created: new Date()\r\n },\r\n {\r\n  id: 12,\r\n  name: \"Goupix\",\r\n  hp: 17,\r\n  cp: 8,\r\n  picture: \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/037.png\",\r\n  types: [\"Feu\"],\r\n  created: new Date()\r\n }\r\n];\r\n\r\nexport default POKEMONS;\r\n","import POKEMONS from \"../models/mock-pokemon\";\r\n\r\nexport default class PokemonService {\r\n\r\n  static pokemons = POKEMONS;\r\n\r\n  static isDev = (!process.env.NODE_ENV || process.env.NODE_ENV === 'development');\r\n\r\n  static getPokemons() {\r\n    if(this.isDev) {\r\n      return fetch('http://localhost:3000/pokemons')\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n      resolve(this.pokemons);\r\n    });\r\n  }\r\n\r\n  static getPokemon(id) {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3000/pokemons/${id}`)\r\n      .then(response => response.json())\r\n      .then(data => this.isEmpty(data) ? null : data)\r\n      .catch(error => this.handleError(error));\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n      resolve(this.pokemons.find(pokemon => id === pokemon.id));\r\n    });\r\n  }\r\n\r\n  static updatePokemon(pokemon) {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3000/pokemons/${pokemon.id}`, {\r\n        method: 'PUT',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n      const { id } = pokemon;\r\n      const index = this.pokemons.findIndex(pokemon => pokemon.id === id);\r\n      this.pokemons[index] = pokemon;\r\n      resolve(pokemon);\r\n    });\r\n  }\r\n\r\n  static deletePokemon(pokemon) {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3000/pokemons/${pokemon.id}`, {\r\n        method: 'DELETE',\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n      const { id } = pokemon;\r\n      this.pokemons = this.pokemons.filter(pokemon => pokemon.id !== id);\r\n      resolve({});\r\n    });\r\n  }\r\n\r\n  static addPokemon(pokemon) {\r\n    pokemon.created = new Date(pokemon.created);\r\n\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3000/pokemons`, {\r\n        method: 'POST',\r\n        body: JSON.stringify(pokemon),\r\n        headers: { 'Content-Type': 'application/json'}\r\n      })\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n      this.pokemons.push(pokemon);\r\n      resolve(pokemon);\r\n    });\r\n  }\r\n\r\n  static searchPokemon(term) {\r\n    if(this.isDev) {\r\n      return fetch(`http://localhost:3000/pokemons?q=${term}`)\r\n      .then(response => response.json())\r\n      .catch(error => this.handleError(error));\r\n    }\r\n\r\n    return new Promise(resolve => {\r\n      const results = this.pokemons.filter(pokemon => pokemon.name.includes(term));\r\n      resolve(results);\r\n    });\r\n\r\n  }\r\n\r\n  static isEmpty(data) {\r\n    return Object.keys(data).length === 0;\r\n  }\r\n\r\n  static handleError(error) {\r\n    console.error(error);\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PokemonService from '../services/pokemon-service';\r\n\r\nconst PokemonSearch = () => {\r\n\r\n  const [term, setTerm] = useState('');\r\n  const [pokemons, setPokemons] = useState([]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const term = e.target.value;\r\n    setTerm(term);\r\n\r\n    if(term.length <= 1) {\r\n      setPokemons([]);\r\n      return;\r\n    }\r\n\r\n    PokemonService.searchPokemon(term).then(pokemons => setPokemons(pokemons));\r\n  }\r\n\r\n  return (\r\n    <div className=\"row\">\r\n    <div className=\"col s12 m6 offset-m3\">\r\n      <div className=\"card\">\r\n      <div className=\"card-content\">\r\n        <div className=\"input-field\">\r\n        <input type=\"text\" placeholder=\"Rechercher un pokémon\" value={term} onChange={e => handleInputChange(e)} />\r\n        </div>\r\n        <div className='collection'>\r\n        {pokemons.map((pokemon) => (\r\n          <Link key={pokemon.id} to={`/pokemons/${pokemon.id}`} className=\"collection-item\">\r\n            {pokemon.name}\r\n          </Link>\r\n        ))}\r\n        </div>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonSearch;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PokemonCard from '../components/pokemon-card';\r\nimport PokemonSearch from '../components/pokemon-search';\r\nimport PokemonService from '../services/pokemon-service';\r\n\r\nconst PokemonList = () => {\r\n  const [pokemons, setPokemons] = useState([]);\r\n\r\n  useEffect(() => {\r\n    PokemonService.getPokemons().then(pokemons => setPokemons(pokemons));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"center\">Pokédex</h1>\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n        <PokemonSearch />\r\n        {pokemons.map(pokemon => (\r\n          <PokemonCard key={pokemon.id} pokemon={pokemon} />\r\n        ))}\r\n        </div>\r\n        <Link className='btn-floating btn-large waves-effect waves-light red z-depth-3'\r\n              style={{position: 'fixed', bottom: '25px', right: '25px' }}\r\n              to=\"/pokemon/add\"\r\n        >\r\n          <i className=\"material-icons\">add</i>\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonList;","import React from 'react';\r\n\r\nconst Loader = () => {\r\n\r\n  return (\r\n    <div className=\"preloader-wrapper big active\">\r\n      <div className=\"spinner-layer spinner-blue\">\r\n        <div className=\"circle-clipper left\">\r\n          <div className=\"circle\"></div>\r\n        </div>\r\n        <div className=\"gap-patch\">\r\n          <div className=\"circle\"></div>\r\n        </div><div className=\"circle-clipper right\">\r\n          <div className=\"circle\"></div>\r\n        </div>\r\n      </div>\r\n   </div>\r\n  );\r\n}\r\n\r\nexport default Loader;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Loader from '../components/loader';\r\nimport formatDate from '../helpers/format-date';\r\nimport formatType from '../helpers/format-type';\r\nimport PokemonService from '../services/pokemon-service';\r\n\r\n\r\nconst Pokemondetail = ({ match }) => {\r\n\r\n  const [pokemon, setPokemon] = useState(null);\r\n\r\n  useEffect(() => {\r\n    PokemonService.getPokemon(match.params.id).then(pokemon => setPokemon(pokemon));\r\n  }, [match.params.id]);\r\n\r\n  return (\r\n    <div>\r\n      { pokemon ? (\r\n        <div className=\"row\">\r\n          <div className=\"col s12 m8 offset-m2\">\r\n            <h2 className=\"header center\">{ pokemon.name }</h2>\r\n            <div className=\"card hoverable\">\r\n              <div className=\"card-image\">\r\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n                <Link to={`/pokemons/edit/${pokemon.id}`} className=\"btn btn-floating right halfway-fab waves-effect waves-light\"><i className=\"material-icons\">edit</i></Link>\r\n              </div>\r\n              <div className=\"card-stacked\">\r\n                <div className=\"card-content\">\r\n                  <table className=\"bordered striped\">\r\n                    <tbody>\r\n                      <tr>\r\n                        <td>Nom</td>\r\n                        <td><strong>{ pokemon.name }</strong></td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Points de vie</td>\r\n                        <td><strong>{ pokemon.hp }</strong></td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Dégâts</td>\r\n                        <td><strong>{ pokemon.cp }</strong></td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Types</td>\r\n                        <td>\r\n                          {pokemon.types.map(type => (\r\n                           <span key={type} className={formatType(type)}>{type}</span>\r\n                          ))}</td>\r\n                      </tr>\r\n                      <tr>\r\n                        <td>Date de création</td>\r\n                        <td>{formatDate(pokemon.created)}</td>\r\n                      </tr>\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                  <Link to=\"/\">Retour</Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\"><Loader/></h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pokemondetail;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PageNotFound = () => {\r\n\r\n  return (\r\n    <div className=\"center\">\r\n      <img src=\"http://assets.pokemon.com/assets/cms2/img/pokedex/full/035.png\" alt=\"Page non trouvée\"/>\r\n      <h1>Hey, cette page n'existe pas !</h1>\r\n      <Link to=\"/\" className=\"waves-effect waves-teal btn-flat\">\r\n        Retourner à l'accueil\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageNotFound;","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport formatType from '../helpers/format-type';\r\nimport PokemonService from '../services/pokemon-service';\r\n\r\nconst PokemonForm = ({pokemon, isEditForm}) => {\r\n\r\n  const [form, setForm] = useState({\r\n    picture: { value: pokemon.picture },\r\n    name: { value: pokemon.name, isValid: true },\r\n    hp: { value: pokemon.hp, isValid: true },\r\n    cp: { value: pokemon.cp, isValid: true },\r\n    types: { value: pokemon.types, isValid: true },\r\n  });\r\n\r\n  const mystyle = {\r\n    position: \"relative\",\r\n    left: \"0\",\r\n    opacity: \"1\",\r\n  };\r\n\r\n  const types = [\r\n    'Plante', 'Feu', 'Eau', 'Insecte', 'Normal', 'Electrik',\r\n    'Poison', 'Fée', 'Vol', 'Combat', 'Psy'\r\n  ];\r\n\r\n  const history = useHistory();\r\n\r\n  const hasType = (type) => {\r\n    return form.types.value.includes(type);\r\n  }\r\n\r\n  const handleInputChange = (e) => {\r\n    const fieldName  = e.target.name;\r\n    const fieldValue = e.target.value;\r\n    const newFields  = {[fieldName]: {value: fieldValue}};\r\n    console.log(newFields);\r\n    setForm({...form, ...newFields});\r\n  }\r\n\r\n  const isAddForm = () => {\r\n    return !isEditForm;\r\n  }\r\n\r\n  const selectType = (type, e) => {\r\n    const checked = e.target.checked;\r\n    let newField;\r\n\r\n    if(checked) {\r\n      // si l'utilisateur coche un type, on l'ajoute à la liste des types du pokémon\r\n      const newTypes = form.types.value.concat([type]);\r\n      newField = { value: newTypes };\r\n    } else {\r\n      // si l'utilisateur décoche un type, on le retire de la liste des types du pokémon\r\n      const newTypes = form.types.value.filter((currentType) => currentType !== type);\r\n      newField = { value: newTypes };\r\n    }\r\n\r\n    setForm({...form, ...{ types: newField}});\r\n  }\r\n\r\n  const validateForm = () => {\r\n    let newForm = form;\r\n\r\n    //validator url\r\n    if(isAddForm()) {\r\n      const start = \"https://assets.pokemon.com/assets/cms2/img/pokedex/detail/\"\r\n      const end = \".png\"\r\n\r\n      if(!form.picture.value.startsWith(start) || !form.picture.value.endsWith(end)) {\r\n        const errorMsg = \"L'url n'est pas valide.\";\r\n        const newField = { value: form.picture.value, error: errorMsg, isValid: false};\r\n        newForm = { ...form, ...{ picture: newField } };\r\n      } else {\r\n        const newField = { value: form.picture.value, error: '', isValid: true};\r\n        newForm = { ...form, ...{ picture: newField } };\r\n      }\r\n    }\r\n\r\n    //validator name\r\n    if(!/^[a-zA-Zàéè ]{3,25}$/.test(form.name.value)) {\r\n      const errorMsg = 'Le nom du pokémon est requis (1-25).';\r\n      const newField = {value: form.name.value, error: errorMsg, isValid: false}\r\n      newForm = { ...newForm, ...{ name: newField }};\r\n    } else {\r\n      const newField = {value: form.name.value, error: '', isValid: true}\r\n      newForm = { ...newForm, ...{ name: newField }};\r\n    }\r\n\r\n    //validator hp\r\n    if(!/^[0-9]{1,3}$/.test(form.hp.value)) {\r\n      const errorMsg = 'Les points de vie du pokémon sont compris entre 0 et 999.';\r\n      const newField = {value: form.hp.value, error: errorMsg, isValid: false}\r\n      newForm = { ...newForm, ...{ hp: newField }};\r\n    } else {\r\n      const newField = {value: form.hp.value, error: '', isValid: true}\r\n      newForm = { ...newForm, ...{ hp: newField }};\r\n    }\r\n\r\n    //validator cp\r\n    if(!/^[0-9]{1,2}$/.test(form.cp.value)) {\r\n      const errorMsg = 'Les dégat du pokémon sont compris entre 0 et 99.';\r\n      const newField = {value: form.hp.value, error: errorMsg, isValid: false}\r\n      newForm = { ...newForm, ...{ cp: newField }};\r\n    } else {\r\n      const newField = {value: form.hp.value, error: '', isValid: true}\r\n      newForm = { ...newForm, ...{ cp: newField }};\r\n    }\r\n\r\n    setForm(newForm);\r\n    return newForm.name.isValid && newForm.hp.isValid && newForm.cp.isValid;\r\n  }\r\n\r\n  const isTypesValid = (type) => {\r\n    if(form.types.value.length === 1 && hasType(type)) {\r\n      return false;\r\n    }\r\n\r\n    if(form.types.value.length >= 3 && !hasType(type)) {\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n\r\n    if(isFormValid) {\r\n      pokemon.picture = form.picture.value;\r\n      pokemon.name = form.name.value;\r\n      pokemon.hp = form.hp.value;\r\n      pokemon.cp = form.cp.value;\r\n      pokemon.types = form.types.value;\r\n\r\n      isEditForm ? updatePokemon() : addPokemon();\r\n    }\r\n  }\r\n\r\n  const addPokemon = () => {\r\n    PokemonService.addPokemon(pokemon).then(() => history.push('/pokemons'));\r\n  }\r\n\r\n  const updatePokemon = () => {\r\n    PokemonService.updatePokemon(pokemon).then(() => history.push(`/pokemons/${pokemon.id}`))\r\n  }\r\n\r\n  const deletePokemon = () => {\r\n    PokemonService.deletePokemon(pokemon).then(() => history.push(`/pokemons`))\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={e => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n            {isEditForm &&\r\n              <div className=\"card-image\">\r\n                <img src={pokemon.picture} alt={pokemon.name} style={{width: '250px', margin: '0 auto'}}/>\r\n                <span className='btn-floating halfway-fab waves-effect waves-light right'><i onClick={deletePokemon} className='material-icons'>delete</i></span>\r\n              </div>\r\n            }\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {isAddForm() &&\r\n                  <div className=\"form-group\">\r\n                    {/* Pokemon picture */}\r\n                    <label htmlFor=\"name\">Image</label>\r\n                    <input id=\"picture\" name=\"picture\" type=\"text\" className=\"form-control\" value={form.picture.value} onChange={e => handleInputChange(e)}></input>\r\n                    {form.picture.error &&\r\n                    <div className=\"card-panel red accent-1\">\r\n                      {form.picture.error}\r\n                    </div>\r\n                    }\r\n                  </div>\r\n                }\r\n                {/* Pokemon name */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"name\">Nom</label>\r\n                  <input id=\"name\" name=\"name\" type=\"text\" className=\"form-control\" value={form.name.value} onChange={e => handleInputChange(e)}></input>\r\n                  {form.name.error &&\r\n                  <div className=\"card-panel red accent-1\">\r\n                    {form.name.error}\r\n                  </div>\r\n                  }\r\n                </div>\r\n                {/* Pokemon hp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"hp\">Point de vie</label>\r\n                  <input id=\"hp\" name=\"hp\" type=\"number\" className=\"form-control\" value={form.hp.value} onChange={e => handleInputChange(e)}></input>\r\n                  {form.hp.error &&\r\n                  <div className=\"card-panel red accent-1\">\r\n                    {form.hp.error}\r\n                  </div>\r\n                  }\r\n                </div>\r\n                {/* Pokemon cp */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"cp\">Dégâts</label>\r\n                  <input id=\"cp\" name=\"cp\" type=\"number\" className=\"form-control\" value={form.cp.value} onChange={e => handleInputChange(e)}></input>\r\n                  {form.cp.error &&\r\n                  <div className=\"card-panel red accent-1\">\r\n                    {form.cp.error}\r\n                  </div>\r\n                  }\r\n                </div>\r\n                {/* Pokemon types */}\r\n                <div className=\"form-group\">\r\n                  <label>Types</label>\r\n                  {types.map(type => (\r\n                    <div key={type} style={{marginBottom: '10px'}}>\r\n                      <label>\r\n                        <input id={type} type=\"checkbox\" className=\"filled-in\" style={mystyle} value={type} disabled={!isTypesValid(type)} checked={hasType(type)} onChange={e => selectType(type, e)}></input>\r\n                        <span>\r\n                          <p className={formatType(type)}>{ type }</p>\r\n                        </span>\r\n                      </label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PokemonForm;","import React, { useState, useEffect } from \"react\";\r\nimport Loader from \"../components/loader\";\r\nimport PokemonForm from \"../components/pokemon-form\";\r\nimport PokemonService from \"../services/pokemon-service\";\r\n\r\nconst PokemonEdit = ({ match }) => {\r\n  const [pokemon, setPokemon] = useState(null);\r\n\r\n  useEffect(() => {\r\n    PokemonService.getPokemon(match.params.id).then(pokemon => setPokemon(pokemon));\r\n  }, [match.params.id]);\r\n\r\n  return (\r\n    <div>\r\n      {pokemon ? (\r\n        <div className=\"row\">\r\n          <h2 className=\"header center\">Éditer {pokemon.name}</h2>\r\n          <PokemonForm pokemon={pokemon} isEditForm={true}></PokemonForm>\r\n        </div>\r\n      ) : (\r\n        <h4 className=\"center\"><Loader/></h4>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonEdit;\r\n","export default class Pokemon {\r\n  // 1. Typage des propiétés d'un pokémon.\r\n  id: number;\r\n  hp: number;\r\n  cp: number;\r\n  name: string;\r\n  picture: string;\r\n  types: Array<string>;\r\n  created: Date;\r\n\r\n  // 2. Définition des valeurs par défaut des propriétés d'un pokémon.\r\n  constructor(\r\n   id: number,\r\n   hp: number = 100,\r\n   cp: number = 10,\r\n   name: string = '...',\r\n   picture: string = 'https://assets.pokemon.com/assets/cms2/img/pokedex/detail/???.png',\r\n   types: Array<string> = ['Normal'],\r\n   created: Date = new Date()\r\n  ) {\r\n   // 3. Initialisation des propiétés d'un pokémons.\r\n   this.id = id;\r\n   this.hp = hp;\r\n   this.cp = cp;\r\n   this.name = name;\r\n   this.picture = picture;\r\n   this.types = types;\r\n   this.created = created;\r\n  }\r\n }","import React, { useState } from 'react';\r\nimport PokemonForm from '../components/pokemon-form';\r\nimport Pokemon from '../models/pokemon';\r\n\r\nconst PokemonAdd = () => {\r\n  const [id] = useState(new Date().getTime());\r\n  const [pokemon] = useState(new Pokemon(id));\r\n\r\n  return (\r\n    <div className=\"new\">\r\n      <h2 className=\"header center\">Ajouter un pokemon</h2>\r\n      <PokemonForm pokemon={pokemon} isEditForm={false}></PokemonForm>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonAdd;","export default class AuthentificationService {\r\n  static isAuthenticated = false;\r\n\r\n  static login(username, password) {\r\n    const isAuthenticated = (username === 'pikachu' && password === 'pikachu');\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        this.isAuthenticated = isAuthenticated;\r\n        resolve(isAuthenticated);\r\n      }, 1000);\r\n    });\r\n  }\r\n}","import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AuthenticationService from '../services/authentication-service';\r\n\r\n\r\nconst Login = () => {\r\n\r\n  const history = useHistory();\r\n\r\n  const [form, setForm] = useState({\r\n    username: { value: '' },\r\n    password: { value: '' },\r\n  });\r\n\r\n  const [message, setMessage] = useState('Vous êtes déconnecté. (pikachu / pikachu)');\r\n\r\n  const handleInputChange = (e) => {\r\n    const fieldName = e.target.name;\r\n    const fieldValue = e.target.value;\r\n    const newField = { [fieldName]: { value: fieldValue } };\r\n\r\n    setForm({ ...form, ...newField});\r\n  }\r\n\r\n  const validateForm = () => {\r\n    let newForm = form;\r\n\r\n    // Validator username\r\n    if(form.username.value.length < 3) {\r\n      const errorMsg = 'Votre prénom doit faire au moins 3 caractères de long.';\r\n      const newField = { value: form.username.value, error: errorMsg, isValid: false };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    } else {\r\n      const newField = { value: form.username.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ username: newField } };\r\n    }\r\n\r\n    // Validator password\r\n    if(form.password.value.length < 6) {\r\n      const errorMsg = 'Votre mot de passe doit faire au moins 6 caractères de long.';\r\n      const newField = {value: form.password.value, error: errorMsg, isValid: false};\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    } else {\r\n      const newField = { value: form.password.value, error: '', isValid: true };\r\n      newForm = { ...newForm, ...{ password: newField } };\r\n    }\r\n\r\n    setForm(newForm);\r\n\r\n    return newForm.username.isValid && newForm.password.isValid;\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isFormValid = validateForm();\r\n    if(isFormValid) {\r\n      setMessage('👉 Tentative de connexion en cours ...');\r\n      AuthenticationService.login(form.username.value, form.password.value).then(isAuthenticated => {\r\n        if(!isAuthenticated) {\r\n          setMessage('🔐 Identifiant ou mot de passe incorrect.');\r\n          return;\r\n        }\r\n\r\n        history.push('/pokemons');\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={(e) => handleSubmit(e)}>\r\n      <div className=\"row\">\r\n        <div className=\"col s12 m8 offset-m2\">\r\n          <div className=\"card hoverable\">\r\n            <div className=\"card-stacked\">\r\n              <div className=\"card-content\">\r\n                {/* Form message */}\r\n                {message && <div className=\"form-group\">\r\n                  <div className=\"card-panel grey lighten-5\">\r\n                    {message}\r\n                  </div>\r\n                </div>}\r\n                {/* Field username */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Identifiant</label>\r\n                  <input id=\"username\" type=\"text\" name=\"username\" className=\"form-control\" value={form.username.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.username.error &&\r\n                  <div className=\"card-panel red accent-1\">\r\n                   {form.username.error}\r\n                  </div>}\r\n                </div>\r\n                {/* Field password */}\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Mot de passe</label>\r\n                  <input id=\"password\" type=\"password\" name=\"password\" className=\"form-control\" value={form.password.value} onChange={e => handleInputChange(e)}></input>\r\n                  {/* error */}\r\n                  {form.password.error &&\r\n                  <div className=\"card-panel red accent-1\">\r\n                   {form.password.error}\r\n                  </div>}\r\n                </div>\r\n              </div>\r\n              <div className=\"card-action center\">\r\n                {/* Submit button */}\r\n                <button type=\"submit\" className=\"btn\">Valider</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthenticationService from './services/authentication-service';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n  <Route {...rest} render={(props) => {\r\n    const isAuthenticated = AuthenticationService.isAuthenticated;\r\n    if (!isAuthenticated) {\r\n      return <Redirect to={{ pathname: '/login' }} />\r\n    }\r\n\r\n    return <Component {...props} />\r\n  }} />\r\n);\r\n\r\nexport default PrivateRoute;","import React from 'react';\nimport PokemonList from './pages/pokemon-list';\nimport Pokemondetail from './pages/pokemon-detail';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport PageNotFound from './pages/page-not-found';\nimport PokemonEdit from './pages/pokemon-edit';\nimport PokemonAdd from './pages/pokemon-add';\nimport Login from './pages/login';\nimport PrivateRoute from './PrivateRoute';\n\nconst App= () => {\n  return (\n    <Router>\n      <div>\n        <nav>\n          <div className=\"nav-wrapper teal\">\n            <Link to=\"/\" className='brand-logo center'>Pokédex</Link>\n          </div>\n        </nav>\n        <Switch>\n          <PrivateRoute exact path=\"/\" component={PokemonList} />\n          <Route exact path=\"/login\" component={Login} />\n          <PrivateRoute exact path=\"/pokemons\" component={PokemonList} />\n          <PrivateRoute exact path=\"/pokemon/add\" component={PokemonAdd} />\n          <PrivateRoute path=\"/pokemons/edit/:id\" component={PokemonEdit}/>\n          <PrivateRoute path=\"/pokemons/:id\" component={Pokemondetail}/>\n          <Route component={PageNotFound} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}